rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write their own class notes
    match /classnotes/{noteId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow authenticated users to read and write their own lesson plans
    match /lessonplan/{planId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow authenticated users to read and write their own question sets
    // Handle all variations of the collection name
    match /questionsets/{setId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /questionSet/{setId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /questionset/{setId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow authenticated users to read and write their own presentations
    match /presentations/{presentationId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow authenticated users to read and write their own flashcards
    match /flashcards/{flashcardId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow authenticated users to read and write their own resources
    match /resources/{resourceId} {
      // Allow any authenticated user to read all resources for filtering purposes
      allow read: if true;  // Allow public read access to resources collection
      allow write: if request.auth != null && (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow access to daily stats collection
    match /dailyStats/{statId} {
      allow read, write: if request.auth != null;
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
